#pragma checksum "C:\Users\Admin\NCKH-HTTL\DM_PMS-master\DM_PMS-master\PMS\Views\AllowancesManagement\_IncomeTaxTable.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "7a70a95150c7bfea6f24c5662646cfe259a157bb77ce42b82b8b6da317cdaa3e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_AllowancesManagement__IncomeTaxTable), @"mvc.1.0.view", @"/Views/AllowancesManagement/_IncomeTaxTable.cshtml")]
namespace AspNetCore
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Admin\NCKH-HTTL\DM_PMS-master\DM_PMS-master\PMS\Views\_ViewImports.cshtml"
using PMS

#nullable disable
    ;
#nullable restore
#line 2 "C:\Users\Admin\NCKH-HTTL\DM_PMS-master\DM_PMS-master\PMS\Views\_ViewImports.cshtml"
using PMS.Models

#line default
#line hidden
#nullable disable
    ;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"7a70a95150c7bfea6f24c5662646cfe259a157bb77ce42b82b8b6da317cdaa3e", @"/Views/AllowancesManagement/_IncomeTaxTable.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"83b5892872b9832a1e8234091eadcc90e0acc594c5e18fc036d5742e68d0e2bc", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_AllowancesManagement__IncomeTaxTable : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<int?>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/handsontable@14.3.0/dist/handsontable.full.min.css"" />
<div id=""taxTableWrapper"" style=""overflow:auto;"">
    <div id=""taxTable""></div>

    <script src=""https://cdn.jsdelivr.net/npm/handsontable@14.3.0/dist/handsontable.full.min.js""></script>
    <script>
        (function () {
            const container = document.getElementById('taxTable');

            const nestedHeaders = [
                ['Số', 'Tên', 'Mã nhân viên', 'TK', 'Hệ số lương', 'Thu nhập chịu thuế tháng 10/2024', 'Thuế phải nộp', 'Tổng cộng']
            ];

            const columns = [
                { data: 0, type: 'numeric', width: 50 },
                { data: 1, type: 'text', width: 180 },
                { data: 2, type: 'text', width: 100 },
                { data: 3, type: 'text', width: 100 },
                { data: 4, type: 'numeric', numericFormat: { pattern: '0.00' }, width: 100 },
                { data: 5, type: 'numeric', numericFormat: { patter");
            WriteLiteral(@"n: '0,0' }, width: 160 },
                { data: 6, type: 'numeric', numericFormat: { pattern: '0,0' }, width: 120 },
                { data: 7, type: 'numeric', numericFormat: { pattern: '0,0' }, readOnly: true, width: 120 },
            ];

            const data = [
                [1, 'Nguyễn 001', 'zzz', '#N/A', '#N/A', '', '', ''],
                [2, 'Nguyễn 002', 'zzz', '#N/A', '#N/A', '', '', ''],
                [3, 'Nguyễn 003', 'zzz', '#N/A', '#N/A', '', '', ''],
                [4, 'Nguyễn 004', 'zzz', '#N/A', '#N/A', '', '', ''],
                [5, 'Nguyễn 005', 'zzz', '#N/A', '#N/A', '', '', ''],
                [6, 'Nguyễn 006', 'zzz', '#N/A', '#N/A', '', '', ''],
                [7, 'Nguyễn 007', 'zzz', '#N/A', '#N/A', '', '', ''],
                [8, 'Nguyễn 008', 'zzz', '#N/A', '#N/A', '', '', ''],
                [9, 'Nguyễn 009', 'zzz', '#N/A', '#N/A', '', '', ''],
                [10, 'Nguyễn 010', 'zzz', '#N/A', '#N/A', '', '', ''],
                [11, 'Nguyễn 011', '");
            WriteLiteral(@"zzz', '#N/A', '#N/A', '', '', ''],
                [12, 'Nguyễn 012', 'zzz', '#N/A', '#N/A', '', '', ''],
            ];

            const hot = new Handsontable(container, {
                data: data,
                columns: columns,
                colHeaders: false,
                rowHeaders: true,
                nestedHeaders: nestedHeaders,
                height: calculateHotHeight(),
                width: '100%',
                stretchH: 'all',
                manualColumnFreeze: true,
                manualColumnMove: true,
                fixedColumnsLeft: 2,
                contextMenu: {
                    items: {
                        row_above: {},
                        row_below: {},
                        hsep1: '---------',
                        freeze_column: { name: 'Cố định cột' },
                        unfreeze_column: { name: 'Bỏ cố định cột' },
                        hsep2: '---------',
                        undo: {},
                        ");
            WriteLiteral(@"redo: {},
                        clear_custom: {
                            name: 'Xóa nội dung các ô đã chọn',
                            callback() { hot.emptySelectedCells(); }
                        }
                    }
                },
                filters: true,
                dropdownMenu: true,
                licenseKey: 'non-commercial-and-evaluation',
                afterChange: function (changes, source) {
                    if (source === 'loadData' || !changes) return;

                    changes.forEach(([row, prop, oldVal, newVal]) => {
                        const thuNhap = parseFloat(hot.getDataAtCell(row, 5)) || 0;
                        const thue = parseFloat(hot.getDataAtCell(row, 6)) || 0;
                        const tong = thuNhap + thue;
                        hot.setDataAtCell(row, 7, tong);
                    });
                }
            });

            function calculateHotHeight() {
                const windowHeight = window.inne");
            WriteLiteral(@"rHeight;
                const offset = 360;
                const calculated = windowHeight - offset;
                return Math.max(calculated, 320);
            }

            window.addEventListener('resize', () => {
                const newHeight = calculateHotHeight();
                hot.updateSettings({ height: newHeight });
            });
        })();
    </script>
</div>
");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<int?> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
